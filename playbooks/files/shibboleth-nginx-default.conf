server {

  listen 80;
  listen 443 default ssl;

  ssl_certificate     /etc/shibboleth/sp-cert.pem;
  ssl_certificate_key /etc/shibboleth/sp-key.pem;
  ssl_protocols       SSLv3 TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers         HIGH:!aNULL:!MD5;
  ssl_session_cache   shared:SSL:10m;
  ssl_session_timeout 10m;

  server_name spid-test.spc-app1.teamdigitale.it;

  # FastCGI authorizer for Auth Request module
  location = /shibauthorizer {
    internal;
    include fastcgi_params;
    fastcgi_pass unix:/tmp/shibauthorizer.sock;
  }

  # FastCGI responder
  location /saml {
    include fastcgi_params;
    fastcgi_param  HTTPS on;
    fastcgi_param  SERVER_PORT 443;
    fastcgi_param  SERVER_PROTOCOL https;
    fastcgi_param  X_FORWARDED_PROTO https;
    fastcgi_param  X_FORWARDED_PORT 443;
    fastcgi_pass unix:/tmp/shibresponder.sock;
  }

  # Resources for the Shibboleth error pages. This can be customised.
  # location /shibboleth-sp {
  #   alias /etc/shibboleth/;
  # }

  location / {
    # by default pass requests to backend, without any shibboleth header
    proxy_pass http://italiaapp-backend:8080;

    ### Set headers ####
    proxy_set_header        Accept-Encoding   "";
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

    location /app {
      more_clear_input_headers 'Variable-*' 'Shib-*' 'Remote-User' 'REMOTE_USER' 'Auth-Type' 'AUTH_TYPE';

      # Add your attributes here. They get introduced as headers
      # by the FastCGI authorizer so we must prevent spoofing.
      more_clear_input_headers 'displayName' 'mail' 'persistent-id';
      shib_request /shibauthorizer;

      proxy_pass http://italiaapp-backend:8080;

      ### Set headers ####
      proxy_set_header        Accept-Encoding   "";
      proxy_set_header        Host            $host;
      proxy_set_header        X-Real-IP       $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }
}
